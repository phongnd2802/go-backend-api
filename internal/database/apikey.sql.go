// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: apikey.sql

package database

import (
	"context"
	"database/sql"
)

const createAPIKey = `-- name: CreateAPIKey :exec
INSERT INTO api_keys (api_key, description) VALUES (?, ?)
`

type CreateAPIKeyParams struct {
	ApiKey      string
	Description sql.NullString
}

func (q *Queries) CreateAPIKey(ctx context.Context, arg CreateAPIKeyParams) error {
	_, err := q.db.ExecContext(ctx, createAPIKey, arg.ApiKey, arg.Description)
	return err
}

const getAPIKey = `-- name: GetAPIKey :one
SELECT id, api_key, description, is_active, created_at, updated_at FROM api_keys WHERE api_key = ? LIMIT 1
`

func (q *Queries) GetAPIKey(ctx context.Context, apiKey string) (ApiKey, error) {
	row := q.db.QueryRowContext(ctx, getAPIKey, apiKey)
	var i ApiKey
	err := row.Scan(
		&i.ID,
		&i.ApiKey,
		&i.Description,
		&i.IsActive,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
